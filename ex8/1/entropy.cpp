#include<iostream>
#include<fstream>
#include<cmath>
#include<cstdlib>
#include<iomanip>
#include<ctime>
using namespace std;

#define W 10

template<typename T>
T max(T * n, int dim){
	T max=0;
	for(int i=0; i<dim; i++) if(n[i]>max) max=n[i];
	return max;
}

double entropy(int, int, int);
void microstates(int, int, int, double*);
void exchange(int*, int*, double*, int, int, int);

int main(){
	int N, nexc=10000;
	cout << "N: "; cin >> N;

	srand(time(NULL));
	ofstream out("entropy.txt");
	for(int i=N-1; i>0; i--)	out << i << "\t" << setw(W) << entropy(N, i, nexc) << endl;
	out.close();
		
	return 0;
}

double entropy(int N, int nl, int nexc){
	double entropy, couples=0;
	double total_couples= (double) nexc*(nexc-1)/2;
	cout << "total: " << total_couples << endl;
	double * micro=new double[nexc];

	microstates(N, nl, nexc, micro);

	couples=0;
	for(int i=0; i<nexc; i++){
		for(int j=i+1; j<nexc; j++) if (micro[i]==micro[j]) couples+=1; 
	}
	
	cout << couples << endl;
	couples=couples/total_couples;
	if(couples > 0){
		entropy=log(1/couples);
		return entropy;
	}
	else cout << "nessuna coppia!\n"; 
	
	return 0;
}

void exchange(int * left, int * right, double * micro, int i, int nl, int nr){
	if(nr==0 || nl==0){
		micro[i]=micro[i-1];
		return;
	}	
	else{
		int il=rand()%nl;
		int ir=rand()%nr;
	
		cout << il << "  " << ir << endl;

		micro[i]=micro[i-1]-pow(2, left[il])+pow(2, right[ir]);

		int temp=left[il];
		left[il]=right[ir];
		right[ir]=temp;
	}
}

void microstates(int N, int nl, int nexc, double * micro){
	int nr=N-nl;
	micro[0]=0;

	ofstream out("entropy_microstates.txt");
	out << "#N=" << N << " nl=" << nl << " nexc=" << nexc << endl;

	//starting microstate of our macrostate
	int * left=((nl!=0)? new int[nl]:NULL);
	int * right=((nr!=0)? new int[nr]:NULL);
	if(nl!=0){	
		for(int i=0; i<nl; i++){
			left[i]=i+1;
			micro[0]=micro[0]*2+2;
		}
	}
	if(nr!=0) for(int i=0; i<nr; i++) right[i]=i+1+nl;

	out << "#microstato: " << 0 << " micro: " << micro[0] << endl;
	for(int i=0; i<max(nl, nr); i++) out << i << "\t" << setw(W) << ( (i < nl) ? left[i] : 0) << "\t" << setw(W) << ( (i < nr) ? right[i] : 0) << endl;	

	//new microstate are generated by exchanging
	for(int i=1; i<nexc; i++){
		exchange(left, right, micro, i, nl, nr);
		out << "\n\n#microstato: " << i << " micro: " << micro[i] << endl;
		for(int j=0; j<max(nl, nr); j++) out << j << "\t" << setw(W) << ( (j < nl) ? left[j] : 0) << "\t" << setw(W) << ( (j < nr) ? right[j] : 0) << endl;	
	}
	out.close();
	
	

}


